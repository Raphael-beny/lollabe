package br.com.lollabe.controller;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import javax.imageio.ImageIO;

import br.com.lollabe.model.Produto;
import br.com.lollabe.repository.ProdutoRepository;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping("/cadastro")
public class ProdutoController {

	@Autowired
	private ProdutoRepository produtoRepository;
	
	@GetMapping
	public List<Produto> listaProdutos(){
		return produtoRepository.findAll();
	}
	

	@GetMapping("/{id}")
	public Optional<Produto> buscarColaborador(@PathVariable Long	id){
		return produtoRepository.findById(id);
	}
	
	@PostMapping("/upload")
	public void mandarFotoPraLaco() {
		try {
			byte[] foto = null;
			BufferedImage imagem = ImageIO.read(new File("C:/dev/Pessoal/lollabe.jpeg"));
			ByteArrayOutputStream baos = new ByteArrayOutputStream();
			ImageIO.write(imagem, "jpeg", baos);
			foto = baos.toByteArray();
			Produto produto = new Produto();
			produto.setCodigo(700);
			produto.setDescricao("aa");
			produto.setNome("Mariazinha");
			produto.setPreco(10);
			produto.setFoto(foto);
			produtoRepository.save(produto);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
//	@GetMapping("upload/{id}")
//	public void fotoColaborador(@PathVariable Long id){
//	
//		ProdutoDto produto = new ProdutoDto();		
//		produto.getFoto() = produtoRepository.findById(id);
//		byte[] foto = null;
//		
//		//LENDO E COPIANDO IMAGEM ##############################################
//		BufferedImage img = null; 
//								
//		try {
//			img = ImageIO.read(new ByteArrayInputStream(produto.getFoto()));
//			lblFoto.setIcon(new ImageIcon(img));	
//			ImageIO.write(img, "PNG", new File("C:/Downloads/h.png"));
//		
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//	}
	
//	@PostMapping("/upload")
//	public void fileupload(@RequestParam("file")MultipartFile multipartFile) throws IOException {
//		String.format("Sucesso no upload!", multipartFile.getOriginalFilename());
//		System.out.println(multipartFile.getName());
//		System.out.println(multipartFile.getSize());
//		System.out.println(multipartFile.getBytes());
//		System.out.println(multipartFile.toString());
//	}
	
//	@RequestMapping(method=RequestMethod.POST, value="/upload")
//    public ResponseEntity<String> receiveData(String produtoJson, MultipartFile foto) {
//
//        ObjectMapper mapper = new ObjectMapper();
//        Produto produto = null;
//
//        try {
//            produto = mapper.readValue(produtoJson, Produto.class);
//        } catch (IOException e) {
//            return ResponseEntity.badRequest().body("Não foi possível ler o json");
//        }
//
//        System.out.println(produto);
//        System.out.println(foto.getOriginalFilename());
//        return ResponseEntity.ok("Deu certo!");
//    }
	
	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	public Produto salvarProduto(@RequestBody Produto produto) {
		return produtoRepository.save(produto);
	}
	
	@DeleteMapping
	public void deletarProduto(@RequestBody Produto produto) {
		produtoRepository.delete(produto);
	}
	
	@PutMapping
	public Produto atualizarProduto(@RequestBody Produto produto) {
		return produtoRepository.save(produto);
	}
	
	@DeleteMapping("/{id}")
	public void deletarProdutoPorId(@PathVariable Long id){
		produtoRepository.deleteById(id);
	}
	
	@PutMapping("/{id}")
	public Produto atualizarProdutoPorId(@PathVariable Long id, @RequestBody Produto produto) {
		produto.setId(id);
		return produtoRepository.save(produto);
	}
	
	@GetMapping("/imagem/{id}")
	public byte[] buscarImagemColaborador(@PathVariable Long	id, @RequestBody Produto produto){		
		byte[] foto = null;
		
		//LENDO E COPIANDO IMAGEM ##############################################
		BufferedImage img = null; 
		return produto.getFoto();
								
//		try {
//			img = ImageIO.read(new ByteArrayInputStream(produto.getFoto()));
//			System.out.println(img);
//			foto = produto.getFoto().toString().getBytes();
//			System.out.println(foto);
//			ImageIO.write(img, "jpeg", new File("C:/dev/Pessoal"));
//		
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
	}
	
}
